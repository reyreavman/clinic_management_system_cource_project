create schema if not exists clinic;

create table clinic.t_client
(
    id              serial primary key,
    c_first_name    varchar(50) not null check (length(trim(c_first_name)) >= 2),
    c_last_name     varchar(50),
    c_phone_number  varchar(20) not null check (length(trim(c_last_name)) <= 20),
    c_email         varchar(255)
);

create table clinic.t_type
(
    id              serial primary key,
    c_name          varchar(100) unique not null
);

create table clinic.t_breed
(
    id              serial primary key,
    c_type_id       integer references clinic.t_type (id) not null,
    c_name          varchar(100) not null
);

create table clinic.t_gender
(
    id              serial primary key,
    c_gender        varchar(10) unique
);

create table clinic.t_label
(
    id              serial primary key,
    c_value         varchar(10) unique,
    c_date_info     date
);

create table clinic.t_pet
(
    id              serial primary key,
    c_client_id     integer references clinic.t_client (id) not null,
    c_pet_name      varchar(50) not null,
    c_type_id       integer references clinic.t_type (id) not null,
    c_breed_id      integer references clinic.t_breed (id) not null,
    c_gender_id     integer references clinic.t_gender (id) not null,
    c_birth_date    date,
    c_label_id      integer references clinic.t_label (id)
);

create table clinic.t_speciality
(
    id                  serial primary key,
    c_name                varchar(100) unique not null
);

create table clinic.t_vet
(
    id                  serial primary key,
    c_first_name        varchar(100) not null,
    c_last_name       varchar(100) not null,
    c_speciality_id     integer references clinic.t_speciality (id) not null
);

create table clinic.t_appointment
(
    id                  serial primary key,
    c_pet_id            integer references clinic.t_pet (id) not null,
    c_app_date          date not null,
    c_app_time          time not null,
    c_vet_id            integer references clinic.t_vet (id) not null,
    c_description       varchar(255),
    c_checkup_id integer references clinic.t_checkup(id),
    c_receptionist_id integer references clinic.t_receptionist(id)
);

create table clinic.t_receptionist
(
    id                  serial primary key,
    c_first_name        varchar(100) not null,
    c_last_name         varchar(100) not null
);

create table clinic.t_appointment_metadata
(
    id                  serial primary key,
    c_receptionist_id   integer references clinic.t_receptionist (id) not null,
    c_appointment_id    integer references clinic.t_appointment (id) not null
);

create table clinic.t_appointment_result_state
(
    id                  serial primary key,
    c_state_name        varchar(255) unique not null
);

create table clinic.t_appointment_result
(
    id                  serial primary key,
    c_app_id            integer references clinic.t_appointment (id) not null,
    c_result_state_id   integer references clinic.t_appointment_result_state (id) not null,
    c_advice            varchar(255),
    c_prescription      varchar(255),
    c_current_app_id integer not null references clinic.t_appointment(id);
    c_next_app_id       integer references clinic.t_appointment (id) not null
);


create table clinic.t_checkup_type
(
    id                  serial primary key,
    c_checkup_type      varchar(255) unique not null
);

create table clinic.t_checkup_state
(
    id                  serial primary key,
    c_state_name        varchar(255) unique not null
);

create table clinic.t_checkup_result
(
    id                  serial primary key,
    c_description       varchar(255)
);

create table clinic.t_checkup
(
    id                  serial primary key,
    c_checkup_date      date not null,
    c_checkup_time      time not null,
    c_pet_id            integer references clinic.t_pet (id) not null,
    c_vet_id            integer references clinic.t_vet (id) not null,
    c_type_id           integer references clinic.t_checkup_type (id) not null,
    c_state_id          integer references clinic.t_checkup_state (id) not null,
    c_result_id integer references clinic.t_checkup_result(id) not null
);

create table clinic.t_icd_catalogue
(
    id              serial primary key,
    c_code          integer unique not null,
    c_description   varchar(255)
);

create table exists clinic.t_diagnoses(
    id              serial primary key,
    disease_id      integer references clinic.t_icd_catalogue (id),
    c_description     varchar
);





